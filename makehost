#!/bin/bash
### Set Language
TEXTDOMAIN=makehost

### Set default parameters
action=$1
domain=$2
rootDir=$3
owner=$(who am i | awk '{print $1}')
sitesEnable='/usr/local/etc/nginx/sites-enabled/'
sitesAvailable='/usr/local/etc/nginx/sites-available/'
userDir='/usr/local/var/www/'

if [ "$(whoami)" != 'root' ]; then
	echo $"You have no permission to run $0 as non-root user. Use sudo"
		exit 1;
fi

if [ "$action" != 'add' ] && [ "$action" != 'delete' ]
	then
		echo $"You need to prompt for action (add or delete) -- Lower-case only"
		exit 1;
fi

while [ "$domain" == "" ]
do
	echo -e $"Please provide domain. e.g.dev,staging"
	read domain
done

if [ "$rootDir" == "" ]; then
	rootDir=$domain
fi

### if root dir starts with '/', don't use /var/www as default starting point
if [[ "$rootDir" =~ ^/ ]]; then
	userDir=''
fi

rootDir=$userDir$rootDir

if [ "$action" == 'add' ]
	then
		### check if domain already exists
		if [ -e $sitesAvailable$domain ]; then
			echo -e $"This domain already exists.\nPlease Try Another one"
			exit;
		fi

		### check if directory exists or not
		if ! [ -d $userDir$rootDir ]; then
			### create the directory
			mkdir $rootDir
			### give permission to root dir
			chmod 755 $rootDir
			### write test file in the new domain dir
			if ! echo "<?php echo phpinfo(); ?>" > $rootDir/index.php
				then
					echo $"ERROR: Not able to write in file $userDir/$rootDir/phpinfo.php. Please check permissions."
					exit;
			else
					echo $"Added content to $rootDir/index.php"
			fi
		fi

		### create virtual host rules file
		if ! echo "server {
			listen   80;
			root html/$domain;
			index index.php index.html index.htm;
			server_name $domain;

			access_log /usr/local/var/log/nginx/$domain.access.log;
    			error_log /usr/local/var/log/nginx/$domain.error.log warn;

			# serve static files directly
			location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
				access_log off;
				expires max;
			}
			# removes trailing slashes (prevents SEO duplicate content issues)
			if (!-d \$request_filename) {
				rewrite ^/(.+)/\$ /\$1 permanent;
			}
			# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
			if (!-e \$request_filename) {
				rewrite ^/(.*)\$ /index.php?/\$1 last;
				break;
			}
			# removes trailing 'index' from all controllers
			if (\$request_uri ~* index/?\$) {
				rewrite ^/(.*)/index/?\$ /\$1 permanent;
			}
			# catch all
			error_page 404 /index.php;
			location ~ \.php$ {
				fastcgi_split_path_info ^(.+\.php)(/.+)\$;
				fastcgi_pass 127.0.0.1:9000;
				fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
				include fastcgi_params;
			}
			location ~ /\.ht {
				deny all;
			}
		}" > $sitesAvailable$domain.conf
		then
			echo -e $"There is an ERROR create $domain file"
			exit;
		else
			echo -e $"\nNew Virtual Host Created\n"
		fi

		### Add domain in /etc/hosts
		#if ! echo "127.0.0.1	$domain" >> /etc/hosts
		#	then
		#		echo $"ERROR: Not able write in /etc/hosts"
		#		exit;
		#else
		#		echo -e $"Host added to /etc/hosts file \n"
		#fi

        ### Add domain in /mnt/c/Windows/System32/drivers/etc/hosts (Windows Subsytem for Linux)
		#if [ -e /mnt/c/Windows/System32/drivers/etc/hosts ]
		#then
		#	if ! echo -e "\r127.0.0.1       $domain" >> /mnt/c/Windows/System32/drivers/etc/hosts
		#	then
		#		echo $"ERROR: Not able to write in /mnt/c/Windows/System32/drivers/etc/hosts (Hint: Try running Bash as administrator)"
		#	else
		#		echo -e $"Host added to /mnt/c/Windows/System32/drivers/etc/hosts file \n"
		#	fi
		#fi

		if [ "$owner" == "" ]; then
			chown -R vladimir:admin $rootDir
		else
			chown -R vladimir:admin $rootDir
		fi

		### enable website
		ln -s $sitesAvailable$domain.conf $sitesEnable$domain.conf

		### restart Nginx
		nginx -s stop && sudo nginx
		echo -e $"NGINX has been restarted"

		### show the finished message
		echo -e $"Complete! \nYou now have a new Virtual Host \nYour new host is: http://$domain \nAnd its located at $userDir$rootDir"
		exit;
	else
		### check whether domain already exists
		if ! [ -e $sitesAvailable$domain.conf ]; then
			echo -e $"This domain dont exists.\nPlease Try Another one"
			exit;
		else
			### Delete domain in /etc/hosts
			newhost=domain
			sed -i "/$newhost/d" /etc/hosts

			### Delete domain in /mnt/c/Windows/System32/drivers/etc/hosts (Windows Subsytem for Linux)
			if [ -e /mnt/c/Windows/System32/drivers/etc/hosts ]
			then
				newhost=$domain
				sed -i "/$newhost/d" /mnt/c/Windows/System32/drivers/etc/hosts
			fi

			### disable website
			rm $sitesEnable$domain.conf

			### restart Nginx
			nginx -s stop && sudo nginx

			### Delete virtual host rules files
			rm $sitesAvailable$domain.conf
		fi

		### check if directory exists or not
		if [ -d $rootDir ]; then
			echo -e $"Delete host root directory ? (y/n)"
			read deldir

			if [ "$deldir" == 'y' -o "$deldir" == 'Y' ]; then
				### Delete the directory
				rm -rf $userDir$rootDir
				echo -e $"Directory deleted"
			else
				echo -e $"Host directory conserved"
			fi
		else
			echo -e $"Host directory not found. Ignored"
		fi

		### show the finished message
		echo -e $"Complete!\nYou just removed Virtual Host $domain"
		exit 0;
fi
